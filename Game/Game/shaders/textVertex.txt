#version 430

layout(location = 0) in vec4 vertex_tex_data;

// Output data ; will be interpolated for each fragment.
out vec2 UV;

void main(){

	vec2 vertexPosition_screenspace = vec2(vertex_tex_data.x, vertex_tex_data.y);
	// Output position of the vertex, in clip space
	// map [0..800][0..600] to [-1..1][-1..1]
	//vec2 vertexPosition_homoneneousspace = vertexPosition_screenspace - vec2(400,300); // [0..800][0..600] -> [-400..400][-300..300]
	//vertexPosition_homoneneousspace /= vec2(400,300);
	//gl_Position =  vec4(vertexPosition_homoneneousspace,0,1);
	gl_Position =  vec4(vertexPosition_screenspace,0,1);
	
	// UV of the vertex. No special space for this one.
	UV = vec2(vertex_tex_data.z, vertex_tex_data.w);
}

